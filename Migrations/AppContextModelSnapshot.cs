// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace CurrencyRatesLoader.Migrations
{
    [DbContext(typeof(AppContext))]
    partial class AppContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CurrencyRatesLoader.Data.ValuteDB", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("CharCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("NumCode")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Valutes");
                });

            modelBuilder.Entity("DateValue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long>("Nominal")
                        .HasColumnType("bigint");

                    b.Property<double>("Value")
                        .HasColumnType("double precision");

                    b.Property<string>("ValuteId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("VunitRate")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.HasIndex("ValuteId");

                    b.ToTable("DateValue");
                });

            modelBuilder.Entity("DateValue", b =>
                {
                    b.HasOne("CurrencyRatesLoader.Data.ValuteDB", "Valute")
                        .WithMany("DateValues")
                        .HasForeignKey("ValuteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Valute");
                });

            modelBuilder.Entity("CurrencyRatesLoader.Data.ValuteDB", b =>
                {
                    b.Navigation("DateValues");
                });
#pragma warning restore 612, 618
        }
    }
}
